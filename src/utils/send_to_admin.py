import asyncio

from telebot.async_telebot import AsyncTeleBot
from telebot.types import Message, CallbackQuery, ReplyKeyboardRemove

from models.app import App


def filter_message(message: Message):
    if str(message.chat.id) in App()['config']['bot']['administrators']['users']:
        return False
    if message.text in ['/start', '/help', '/profile', '/pay', '/rating']:
        return False
    return True


def send_error_logs(handler_func):
    async def wrapper(message: Message, bot: AsyncTeleBot):
        try:
            response_message = await handler_func(message, bot)
        except Exception as e:
            error_text = f"–ë–æ—Ç —É–ø–∞–ª —Å –æ—à–∏–±–∫–æ–π! üëá\n\n{e}"
            print(error_text)

            if "VOICE_MESSAGES_FORBIDDEN" in str(e):
                await App().Dao.user.update({"user_id": message.from_user.id, 'bot_state': 'default', 'messages': []})
                voice_alert = ('–î–ª—è –æ–±—â–µ–Ω–∏—è —Å–æ –º–Ω–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ, —á—Ç–æ–±—ã —É —Ç–µ–±—è –±—ã–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω—ã –≤—Ö–æ–¥—è—â–∏–µ '
                               '–≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∞ —Å–µ–π—á–∞—Å –æ–Ω–∏ –∑–∞–ø—Ä–µ—â–µ–Ω—ã –∏ —è –Ω–µ –º–æ–≥—É –Ω–∞—á–∞—Ç—å —Å —Ç–æ–±–æ–π –ø—Ä–∞–∫—Ç–∏–∫—É üò¢.'
                               '–†–∞–∑—Ä–µ—à–∏ –≤—Ö–æ–¥—è—â–∏–µ –≥—Å –∏ –ø–æ–ø—Ä–æ–±—É–π –∑–∞–Ω–æ–≤–æ –Ω–∞—á–∞—Ç—å –Ω–∞—à—É –ø—Ä–∞–∫—Ç–∏–∫—É /start üôè')
                await bot.send_message(
                    text=voice_alert, chat_id=message.chat.id, reply_markup=ReplyKeyboardRemove()
                )

            else:
                await bot.send_message(
                    text="–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –Ω–µ–º–Ω–æ–≥–æ –ø–æ–∑–∂–µ.\n"
                         "–°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –ø—Ä–∏—Ö–æ–¥—è—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º –∏ –æ–Ω–∏ —Å—Ä–∞–∑—É –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –∑–∞ –∏—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ."
                         "–ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –í—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É.\n"
                         "–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É ‚Äî @HQmupbasic. –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: 08:00 - 23:00 –ø–æ –º—Å–∫.",
                    chat_id=message.chat.id
                )
                for admin_id in App()['config']['bot']['administrators']['users']:
                    admin_id = int(admin_id)
                    await bot.send_message(text=error_text, chat_id=admin_id)
                    raise e

        return response_message

    return wrapper


def send_bot_using_logs(handler_func):
    """
    –î–ª—è —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ, —á—Ç–æ–±—ã handler_func –≤–æ–∑–≤—Ä–∞—â–∞–ª –æ–±—ä–µ–∫—Ç Message, –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –±–æ—Ç–æ–º.
    """

    async def wrapper(message: Message, bot: AsyncTeleBot):
        response_message = await handler_func(message, bot)
        if isinstance(message, CallbackQuery):
            message = message.message
        if not filter_message(message):
            return response_message
        if message.chat.id in App()['config']['bot']['administrators']['users']:
            return response_message
        try:
            for admin_id in App()['config']['bot']['administrators']['users']:
                admin_id = int(admin_id)
                await bot.send_message(
                    text=f"–í–æ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{message.chat.username} (id {message.chat.id})üëá",
                    chat_id=admin_id)
                await bot.forward_message(admin_id, message.chat.id, message.message_id)
                await bot.forward_message(admin_id, message.chat.id, response_message.message_id)
            await asyncio.sleep(1)

        except Exception as e:
            print(f'–ë–∞–≥!!!\n\n{e}')

        return response_message

    return wrapper
